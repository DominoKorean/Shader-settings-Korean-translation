//Origin Shader Perset

#define PLANET_ATMOSPHERE 0
//행성 대기권
//1 우주모드 켜기
//0 우주모드 끄기

#define SAMPLING_LEVEL 3
//샘플링 레벨
//1 낮음
//2 중간
//3 높음
//4 매우 높음

#define LIGHT_STYLE 1
//빛 스타일
//1 기본
//2 추움
//3 따뜻함

#define ALPHA_PBR_STYLE 1
//알파 PBR 스타일
//1 기본

#define CLOUD_TYPE 3
//구름 설정
//1 끔
//2 빠르게
//3 화려하게

#define CHUNK_ANIMATION 1
//청크 로딩 에니메이션
//0 꺼짐
//1 켜짐



//레드스톤 도구

#define REDSTONE_POWER 1
//레드스톤 파워
//0 레드스톤 파워 표시 비활성화
//1 레드스톤 파워 표시 활성화

#define LIGHT_MAP 0
//Light Map
//0 빛 강도 표시 비활성화
//1 빛 강도 경계선 활성화

#define CHUNK_BOUND 0
//청크 경계선
//0 청크 경계선 비활성화
//1 청크 경계선 활성화












////////////////////////////////////////////////////////////////////

//무엇을 하고 있는지 신중히 생각해보고, 다음 설정을 변경하지 않는 것이 좋습니다.
//무엇을 하고 있는지 신중히 생각해보고, 다음 설정을 변경하지 않는 것이 좋습니다.
//무엇을 하고 있는지 신중히 생각해보고, 다음 설정을 변경하지 않는 것이 좋습니다.

////////////////////////////////////////////////////////////////////










#define MATH_PI 3.141592653589793
#define MATH_E 2.718281828459045
#define MATH_PHI 1.618033988749895
#define MATH_Y 0.577215664901533
#define GAMMA 2.2
//감마
#define GRAY vec3(0.18, 0.18, 0.18)
//명도
#define RGB vec3(0.7000, 0.5461, 0.4358)
#define NaN 0.0





//개발자 옵션

#define WHITEWORLD 0
//하얀 월드
//0 꺼짐
//1 켜짐

#define ACHROMATOPSIA 0
//0 꺼짐
//1 켜짐

#define HASH21_TYPE 1
#define HASH22_TYPE 1

#define FAST_MATH 0

#define MOBILE 1

#define TRY_MCPE_NETEASE 0

//개발자 옵션 끝





//레드스톤 도구

#define CHUNK_BOUND_COLOR_X vec4(1.0, 0.0, 0.0, 0.5)
#define CHUNK_BOUND_COLOR_Y vec4(0.0, 1.0, 0.0, 0.5)
#define CHUNK_BOUND_COLOR_Z vec4(0.0, 0.0, 1.0, 0.5)
#define CHUNK_BOUND_COLOR_O vec4(1.0, 1.0, 1.0, 0.2)
//청크 경계선 색상

#define LIGHT_BOUND_COLOR vec4(1.0, 0.5, 0.0, 0.5)
//빛 강도의 테두리 색상

//레드스톤 도구 끝





//행성 대기권

#if PLANET_ATMOSPHERE
#define ELEVATION 20.0
#else
#define ELEVATION 1.5
#endif
//하늘 모드의 기본 고도는 km 단위의 대기 모델링에 사용됩니다.

//행성 대기권 끝





//레벨 샘플링

#if PLANET_ATMOSPHERE && SAMPLING_LEVEL < 3
#define __SAMPLING_LEVEL 3
#else
#define __SAMPLING_LEVEL SAMPLING_LEVEL
#endif

#if __SAMPLING_LEVEL == 1
#define SAMNUM 2.0
#define MARNUM 2.0
#define CLOINTNUM  6.0
#define CLOSAMNUM  3.0
#define CLOMARNUM  3.0
#define FAST_SOFTSHADOW 1
#define FAST_BSDF 1
#define FAST_PERLIN 1
#define FAST_VALUE 1
#define FAST_VORO 1

#elif __SAMPLING_LEVEL == 2
#define SAMNUM 2.0
#define MARNUM 6.0
#define CLOINTNUM  8.0
#define CLOSAMNUM  3.0
#define CLOMARNUM  6.0
#define FAST_SOFTSHADOW 1
#define FAST_BSDF 0
#define FAST_PERLIN 1
#define FAST_VALUE 1
#define FAST_VORO 0

#elif __SAMPLING_LEVEL == 3
#define SAMNUM 3.0
#define MARNUM 9.0
#define CLOINTNUM  12.0
#define CLOSAMNUM  6.0
#define CLOMARNUM  12.0
#define FAST_SOFTSHADOW 1
#define FAST_BSDF 0
#define FAST_PERLIN 0
#define FAST_VALUE 1
#define FAST_VORO 0

#elif __SAMPLING_LEVEL == 4
#define SAMNUM 16.0
#define MARNUM 16.0
#define CLOINTNUM  16.0
#define CLOSAMNUM  16.0
#define CLOMARNUM  16.0
#define FAST_SOFTSHADOW 0
#define FAST_BSDF 0
#define FAST_PERLIN 0
#define FAST_VALUE 0
#define FAST_VORO 0

#endif

/SAMNUM
//하늘 모드에서 햇빛 방향의 샘플링 수

//MARNUM
//물리적 하늘에서 시선 방향의 기본 샘플 수
//하늘 모드에서 시선 방향의 기본 샘플 수입니다.

//CLOINTNUM
//젤리 구름 모양, 복셀 교차 수
//젤리 구름 모양, 복셀 교차 수입니다.

//CLOSAMNUM
//젤리 구름 조명, 복셀 교차 수
//젤리 구름 조명, 복셀 교차 수입니다.

//CLOMARNUM
//젤리 구름 렌더링의 샘플 수
//젤리 구름 렌더링의 샘플 수입니다.

//FAST_SOFTSHADOW
//더 빠르지만 약간의 단점이 있는 소프트 쉐도우
//더 빠르지만 약간의 단점이 있는 소프트 쉐도우입니다.

//FAST_BSDF
//더 빠르지만 약간의 단점이 있는 BRDF
//더 빠르지만 약간의 단점이 있는 BRDF입니다.

//FAST_PERLIN
//일곱 번째 도함수로 부드럽게 된 Perlin 잡음만 사용
//일곱 번째 도함수로 부드럽게 된 Perlin 잡음만 사용합니다.

//FAST_VALUE
//일곱 번째 도함수로 부드럽게 된 값 잡음만 사용
//일곱 번째 도함수로 부드럽게 된 값 잡음만 사용합니다.

//FAST_VORO
//사원격자에서 샘플링하는 Voronoi 잡음만 사용
//사원격자에서 샘플링하는 Voronoi 잡음만 사용합니다.

/레벨 샘플링 끝



//빛 스타일

#define __LIGHT_STYLE LIGHT_STYLE

#if __LIGHT_STYLE == 1
#define SUNCOL vec3(1.0000, 1.0000, 1.0000)
#define SUNLIGHT_A 14.0
#define MOOCOL vec3(1.0000, 1.0000, 1.0000)
#define MOOLIGHT_A 0.2
#define POICOL vec3(1.0000, 0.5155, 0.2087)
#define POILIGHT_A 14.0
#define ENVCOL vec3(1.0000, 1.0000, 1.0000)
#define ENVLIGHT_A 0.01
#define LATITUDE 0.2618
#define SUN_R 0.009512
#define SOFTSHADOW 3.0
#define TONEMAP 2
#define LUM 1.0
#define FOG_A 16.0
#define O3 (0.010 * vec3(3.426, 8.298, 0.356) * 0.06)
#define LR (0.010 * vec3(0.580, 1.350, 3.310))
#define LM (0.010 * vec3(2.000, 2.000, 2.000))
#define USE_WATER_TEXTURE 0
#define WATER_TYPE 2
#define MILKY_WAY_LIGHT 0.05
#define MILKY_WAY_DEC_X 0.65
#define MILKY_WAY_DEC_Y 0.65
#define MILKY_WAY_DEC_Z 0.65
#define STAR_LIGHT 10.0
#define PM_AIR vec3(0.10, 0.80, 0.10)
#define G_AIR vec3(-0.15, 0.75, 0.99)
#define PM_FOG vec3(0.10, 0.80, 0.10)
#define G_FOG vec3(-0.15, 0.75, 0.15)
#define RO (LR + O3)
#define HR 8.0
#define HM 1.2
#define EARTH_R 6371.0
#define EARTH_r (EARTH_R - 0.5)
#define SUN_RISE_Y (-0.04)
#define EARTH_SHADOW 1

#elif __LIGHT_STYLE == 2
#define SUNCOL vec3(1.0000, 1.0000, 1.0000)
#define SUNLIGHT_A 12.0
#define MOOCOL vec3(1.0000, 1.0000, 1.0000)
#define MOOLIGHT_A 0.2
#define POICOL vec3(1.0000, 1.0000, 1.0000)
#define POILIGHT_A 8.0
#define ENVCOL vec3(1.0000, 1.0000, 1.0000)
#define ENVLIGHT_A 0.01
#define LATITUDE 0.2618
#define SUN_R 0.009512
#define SOFTSHADOW 3.0
#define TONEMAP 1
#define LUM 1.0
#define FOG_A 16.0
#define O3 (0.010 * vec3(3.426, 8.298, 0.356) * 0.06)
#define LR (0.005 * vec3(0.580, 1.350, 3.310))
#define LM (0.005 * vec3(2.000, 2.000, 2.000))
#define USE_WATER_TEXTURE 0
#define WATER_TYPE 2
#define MILKY_WAY_LIGHT 0.05
#define MILKY_WAY_DEC_X 0.65
#define MILKY_WAY_DEC_Y 0.65
#define MILKY_WAY_DEC_Z 0.65
#define STAR_LIGHT 10.0
#define PM_AIR vec3(0.10, 0.80, 0.10)
#define G_AIR vec3(-0.15, 0.75, 0.99)
#define PM_FOG vec3(0.10, 0.80, 0.10)
#define G_FOG vec3(-0.15, 0.75, 0.15)
#define RO (LR + O3)
#define HR 8.0
#define HM 1.2
#define EARTH_R 6371.0
#define EARTH_r (EARTH_R - 0.5)
#define SUN_RISE_Y (-0.04)
#define EARTH_SHADOW 1

#elif __LIGHT_STYLE == 3
#define SUNCOL vec3(1.0000, 1.0000, 1.0000)
#define SUNLIGHT_A 14.0
#define MOOCOL vec3(1.0000, 1.0000, 1.0000)
#define MOOLIGHT_A 0.2
#define POICOL vec3(1.0000, 0.3814, 0.0588)
#define POILIGHT_A 14.0
#define ENVCOL vec3(1.0000, 1.0000, 1.0000)
#define ENVLIGHT_A 0.01
#define LATITUDE 0.2618
#define SUN_R 0.009512
#define SOFTSHADOW 3.0
#define TONEMAP 1
#define LUM 1.0
#define FOG_A 16.0
#define O3 (0.010 * vec3(3.426, 8.298, 0.356) * 0.06)
#define LR (0.015 * vec3(0.580, 1.350, 3.310))
#define LM (0.015 * vec3(2.000, 2.000, 2.000))
#define USE_WATER_TEXTURE 0
#define WATER_TYPE 2
#define MILKY_WAY_LIGHT 0.05
#define MILKY_WAY_DEC_X 0.65
#define MILKY_WAY_DEC_Y 0.65
#define MILKY_WAY_DEC_Z 0.65
#define STAR_LIGHT 10.0
#define PM_AIR vec3(0.10, 0.80, 0.10)
#define G_AIR vec3(-0.15, 0.75, 0.99)
#define PM_FOG vec3(0.10, 0.80, 0.10)
#define G_FOG vec3(-0.15, 0.75, 0.15)
#define RO (LR + O3)
#define HR 8.0
#define HM 1.2
#define EARTH_R 6371.0
#define EARTH_r (EARTH_R - 0.5)
#define SUN_RISE_Y (-0.04)
#define EARTH_SHADOW 1

#endif


//태양광이 우주에서 가지는 R G B 색상
//우주에서의 태양광의 밝기

//우주에서의 달빛의 R G B 색상
//우주에서의 달빛의 밝기

//램프광의 R G B 색상
//램프광의 밝기

//환경광의 R G B 색상
//환경광의 밝기

//위도
//15도

//태양의 반경, 라디안 단위
//The radius of the sun, in radians

//소프트 그림자 너비
//soft shadow width

//톤맵
//0 없음
//1 ACES
//2 Filmic

//밝기
//Global brightness

//안개 가시도, 값이 클수록 안개가 희미해짐
//visibility, greater the value less the foggy

//오존 농도
//Ozone

//레일리 산란 강도
//Rayleigh scattering

//미 산란 강도
//Mie scattering

//원본 물 표면 재질 사용
//Use vanilla water surface material

//물 유형
//1 정지된 물 //still
//2 작은 파도 //small waves

//은하계 밝기
//luminance of the milky way

//은하계 회전 각도, 달과 은하의 상대 위치를 변경함, 아무 값이나 가능
//angle of rotation for milky way, changes relative position between the Moon and the milky way, any value will do

//별 빛의 밝기 배율,은하계 밝기를 기준으로 별 빛을 강화함
//multiple ratio of light intensity for stars, enhance stars’ luminance base on the milky way’s

//어수선한 위상 함수의 매개 변수, 사용자의 취향에 따라 시행착오를 거쳐서 조정하면 됩니다.
//mess of phase function’s values, trial them as you like, I give up explaining

//대기 산란 투과도, 미적효과를 위해 수정하지 않아야 함
//atmospheric scattering transmittance, usually should not be modify unless for aesthetic effect

//레일리 산란 스케일링 높이, km 단위
//Rayleigh scattering scaling height, in km

//미 산란 스케일링 높이, km 단위
//Mie scattering scaling height, in km

//지구 해수면 위치의 반경, 대기층 모델링에 사용, km 단위
//sea surface’s location on Earth’s radius, for atmospheric modeling, in km

//EARTH_R
//대기 모델링을 위한 지구 해수면 위치의 반지름, 단위는 km
//sea surface’s location on Earth’s radius, for atmospheric modeling, in km

//EARTH_r
//대기 모델링을 위한 실제 지구 표면의 반지름, 단위는 km
//radius of Earth’s actual surface, for atmospheric modeling, in km
//해수면 위치의 반지름보다 약간 작아야 하며, 수평선의 분리를 최소화하도록 조정되어야 합니다.
//should slightly smaller than EARTH_R, adjust to minimize the parting of skyline

//SUN_RISE_Y
//해가 뜨거나 질 때의 태양 높이, 태양과 달 사이의 전환을 부드럽게 하기 위해 조정합니다.
//Sun’s height when dusk and dawn, adjust to smoothen the transition between Sun and Moon

//EARTH_SHADOW
//지구가 가리는 정도
//Earth obscure

//빛 스타일 끝






#if CLOUD_TYPE == 1
#define CLOUD_COVERAGE 0.0
#define CLOUD_LM NaN
#define CLOUD_SPEED NaN
#define PM_CLOUD NaN
#define G_CLOUD NaN
#define CLOUD_W NaN
#define CLOUD_H NaN
#define CLOUD_Y NaN
#define CLOSIZ NaN

#elif CLOUD_TYPE == 2
#define CLOUD_COVERAGE 0.7
#define CLOUD_LM NaN
#define CLOUD_SPEED vec2(0.02, 0.05)
#define PM_CLOUD NaN
#define G_CLOUD NaN
#define CLOUD_W (1.0)
#define CLOUD_H (1.0 / 3.0)
#define CLOUD_Y (3.0)
#define CLOSIZ vec3(CLOUD_W, CLOUD_H, CLOUD_W)

#elif CLOUD_TYPE == 3
#define CLOUD_COVERAGE 0.7
#define CLOUD_LM 4.5
#define CLOUD_SPEED vec2(0.02, 0.05)
#define PM_CLOUD vec3(0.10, 0.75, 0.15)
#define G_CLOUD vec3(-0.15, 0.05, 0.95)
#define CLOUD_W (1.0)
#define CLOUD_H (1.0 / 3.0)
#define CLOUD_Y (3.0)
#define CLOSIZ vec3(CLOUD_W, CLOUD_H, CLOUD_W)

#endif

//CLOUD_COVERAGE
//구름 덮개, 1.0은 맑은 날씨를 의미합니다.
//Cloud coverage, 1.0 for sunny

//CLOUD_LM
//구름과 빛의 흡수 계수
//Attenuation coefficient of cloud to light

//CLOUD_SPEED
//구름의 속도, km/s 단위
//Speed of cloud, in km/s

//PM_CLOUD
//G_CLOUD
//위상 함수의 값들의 뒤죽박죽, 직접 조정해보세요.
//mess of phase function’s values, trial them as you like, I give up explaining

//CLOUD_W
//CLOUD_H
//CLOUD_Y
//구름의 폭, km 단위
//cloud width, in km
//구름의 두께, km 단위
//cloud thickness, in km
//구름의 바닥 고도, km 단위
//altitude of the bottom of cloud, in km

//CLOSIZ
//구름 크기
//cloud size





#if ALPHA_PBR_STYLE == 1
#define USE_NORMAL_MAP 1
#define NORMAL_MAP_FIX 1
#define NORMAL_MAP_STRENGTH 1.0
#define NORMAL_MAP_W 1.5
#define FLUORESCENCE 0.5
#define ROUGHNESS 1.0
#define ROUGHNESS_0 0.05
#define HARDCODE_MATEL 0.8
#define F0          vec3(0.040)
#define F0_LEAVES   vec3(0.020)
#define F0_WATER    vec3(0.040) //vec3(0.020)
#define F0_GLASS    vec3(0.035)
#define F0_DIAMOND  vec3(0.172)
#if NORMAL_MAP_FIX
#define TEXSIZW 16384.0
#define TEXSIZH 8192.0
#else
#define TEXSIZW 8192.0
#define TEXSIZH 8192.0
#endif

#endif


//USE_NORMAL_MAP
//1 사용자 정의 노멀 사용
//1 use custom normal
//0 자동 생성된 노멀 사용 금지
//0 do not use auto generated normal

//NORMAL_MAP_FIX
//노멀 맵의 불규칙한 폭을 조정
//adjusting the uneven width of normal map

//NORMAL_MAP_STRENGTH
//노멀 맵 강도
//strength of normal mapping

//NORMAL_MAP_W
//노멀 맵 폭
//width of normal mapping

//FLUORESCENCE
//재질의 기본 발광 강도
//Default fluorescence

//ROUGHNESS
//재질의 기본 거칠기
//Default roughness

//ROUGHNESS_0
//매끄러운 표면에서 반사되는 햇빛의 거칠기
//roughness of sunlight reflected by smooth surface

//HARDCODE_MATEL
//금속의 F0를 재질 색상과 PBR 하드 코딩 색상 사이에서 보간
//interpolating metal’s F0 between colour of material and PBR hard coded colour

//F0
//하드 코딩에 일반적으로 사용되는 재질의 F0 값, 예술적 효과를 위해서가 아니면 수정하지 않는 것이 좋음
//material F0 value commonly used in hard coding, usually should not be modified unless for aesthetic effect
//F0 = ((n1-n2)/(n1+n2))^2, n(air) = 1.00029

































